; benchmark generated from python API
(set-info :status unknown)
(declare-fun rdi () (_ BitVec 64))
(declare-fun R () (_ BitVec 32))
(assert
 (let ((?x6 ((_ extract 31 0) rdi)))
 (let ((?x60 (bvmul (_ bv3 32) ?x6)))
 (let (($x174 (= R ?x60)))
 (let ((?x38 ((_ extract 31 31) rdi)))
 (let ((?x229 (concat (concat (concat (concat (concat ?x38 ?x38) ?x38) ?x38) ?x38) ?x38)))
 (let ((?x227 (concat (concat (concat (concat (concat ?x229 ?x38) ?x38) ?x38) ?x38) ?x38)))
 (let ((?x243 (concat (concat (concat (concat (concat ?x227 ?x38) ?x38) ?x38) ?x38) ?x38)))
 (let ((?x248 (concat (concat (concat (concat (concat ?x243 ?x38) ?x38) ?x38) ?x38) ?x38)))
 (let ((?x253 (concat (concat (concat (concat (concat ?x248 ?x38) ?x38) ?x38) ?x38) ?x38)))
 (let ((?x258 (concat (concat (concat (concat (concat ?x253 ?x38) ?x38) ?x38) ?x38) ?x38)))
 (let ((?x260 (concat (concat ?x258 ?x38) ?x6)))
 (let (($x262 (bvule ?x260 (_ bv2147483647 64))))
 (let ((?x382 (bvsub (_ bv2147483647 32) ?x6)))
 (let ((?x388 ((_ sign_extend 32) ?x382)))
 (let (($x394 (bvule ?x260 ?x388)))
 (let ((?x67 (bvmul (_ bv2 32) ?x6)))
 (let ((?x714 (bvsub (_ bv2147483647 32) ?x67)))
 (let ((?x715 ((_ sign_extend 32) ?x714)))
 (let (($x1442 (bvule ?x260 ?x715)))
 (let (($x173 (and $x1442 $x394 $x262 $x174)))
 (let (($x170 (= (_ bv2147483647 32) R)))
 (let (($x1686 (bvugt ?x260 ?x715)))
 (let (($x172 (and $x1686 $x394 $x262 $x170)))
 (let ((?x390 (bvmul (_ bv4294967295 32) ?x6)))
 (let ((?x496 (bvadd (_ bv4294967294 32) ?x390)))
 (let (($x158 (= R ?x496)))
 (let (($x707 (bvugt ?x260 ?x388)))
 (let ((?x391 (bvadd (_ bv2147483647 32) ?x390)))
 (let ((?x392 ((_ extract 31 31) ?x391)))
 (let ((?x1675 (concat (concat (concat (concat (concat ?x392 ?x392) ?x392) ?x392) ?x392) ?x392)))
 (let ((?x1690 (concat (concat (concat (concat (concat ?x1675 ?x392) ?x392) ?x392) ?x392) ?x392)))
 (let ((?x1652 (concat (concat (concat (concat (concat ?x1690 ?x392) ?x392) ?x392) ?x392) ?x392)))
 (let ((?x1667 (concat (concat (concat (concat (concat ?x1652 ?x392) ?x392) ?x392) ?x392) ?x392)))
 (let ((?x1709 (concat (concat (concat (concat (concat ?x1667 ?x392) ?x392) ?x392) ?x392) ?x392)))
 (let ((?x1657 (concat (concat (concat (concat (concat ?x1709 ?x392) ?x392) ?x392) ?x392) ?x392)))
 (let ((?x1637 (concat (concat ?x1657 ?x392) ?x391)))
 (let (($x1634 (bvule ?x1637 (_ bv0 64))))
 (let (($x166 (and $x1634 $x707 $x262 $x158)))
 (let (($x1757 (bvugt ?x1637 (_ bv0 64))))
 (let (($x152 (and $x1757 $x707 $x262 $x170)))
 (let (($x377 (bvugt ?x260 (_ bv2147483647 64))))
 (let (($x171 (and $x377 $x170)))
 (let (($x176 (or $x171 $x152 $x166 $x172 $x173)))
 (let (($x179 (not $x176)))
 (let (($x162 (= (_ bv4294967256 32) R)))
 (let ((?x7 ((_ zero_extend 32) ?x6)))
 (let ((?x11 (bvlshr ?x7 (_ bv31 64))))
 (let ((?x20 ((_ extract 0 0) ?x11)))
 (let ((?x27 (bvand ?x20 (_ bv1 1))))
 (let (($x26 (and (distinct (_ bv0 1) ?x27) true)))
 (let (($x160 (and $x26 $x162)))
 (let (($x53 (= (_ bv0 1) ?x27)))
 (let ((?x68 ((_ zero_extend 32) ?x67)))
 (let ((?x70 (bvlshr ?x68 (_ bv31 64))))
 (let ((?x71 ((_ extract 0 0) ?x70)))
 (let ((?x72 (bvand ?x71 (_ bv1 1))))
 (let (($x73 (and (distinct (_ bv0 1) ?x72) true)))
 (let (($x159 (and $x73 $x53 $x162)))
 (let (($x149 (= (_ bv0 1) ?x72)))
 (let ((?x61 ((_ zero_extend 32) ?x60)))
 (let ((?x155 (bvlshr ?x61 (_ bv31 64))))
 (let ((?x156 ((_ extract 0 0) ?x155)))
 (let ((?x157 (bvand ?x156 (_ bv1 1))))
 (let (($x153 (and (distinct (_ bv0 1) ?x157) true)))
 (let (($x161 (and $x153 $x149 $x53 $x162)))
 (let (($x226 (= (_ bv0 1) ?x157)))
 (let (($x85 (and $x226 $x149 $x53 $x174)))
 (let (($x169 (or $x85 $x161 $x159 $x160)))
 (let (($x178 (not $x169)))
 (let (($x180 (and $x178 $x179)))
 (let (($x177 (and $x169 $x176)))
 (let (($x181 (or $x177 $x180)))
 (not $x181))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
