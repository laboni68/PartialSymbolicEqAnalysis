; benchmark generated from python API
(set-info :status unknown)
(declare-fun R () (_ BitVec 32))
(declare-fun rdi () (_ BitVec 64))
(assert
 (let (($x709 (= (_ bv0 32) R)))
 (let ((?x31 ((_ extract 7 0) rdi)))
 (let ((?x25 (bvand ?x31 (_ bv1 8))))
 (let (($x69 (and (distinct (_ bv0 8) ?x25) true)))
 (let (($x527 (and $x69 $x709)))
 (let (($x14 (= (_ bv0 8) ?x25)))
 (let ((?x89 ((_ extract 31 31) rdi)))
 (let ((?x100 (concat (_ bv0 31) ?x89)))
 (let ((?x6 ((_ extract 31 0) rdi)))
 (let ((?x101 (bvadd ?x6 ?x100)))
 (let ((?x102 ((_ extract 31 31) ?x101)))
 (let ((?x87 (concat (concat (concat (concat (concat ?x102 ?x102) ?x102) ?x102) ?x102) ?x102)))
 (let ((?x108 (concat (concat (concat (concat (concat ?x87 ?x102) ?x102) ?x102) ?x102) ?x102)))
 (let ((?x113 (concat (concat (concat (concat (concat ?x108 ?x102) ?x102) ?x102) ?x102) ?x102)))
 (let ((?x118 (concat (concat (concat (concat (concat ?x113 ?x102) ?x102) ?x102) ?x102) ?x102)))
 (let ((?x123 (concat (concat (concat (concat (concat ?x118 ?x102) ?x102) ?x102) ?x102) ?x102)))
 (let ((?x128 (concat (concat (concat (concat (concat ?x123 ?x102) ?x102) ?x102) ?x102) ?x102)))
 (let ((?x130 (concat (concat ?x128 ?x102) ?x101)))
 (let ((?x131 (bvashr ?x130 (_ bv1 64))))
 (let ((?x172 ((_ extract 7 0) ?x131)))
 (let ((?x149 (bvand ?x172 (_ bv1 8))))
 (let (($x229 (and (distinct (_ bv0 8) ?x149) true)))
 (let (($x445 (and $x229 $x14 $x709)))
 (let (($x155 (= (_ bv0 8) ?x149)))
 (let ((?x315 ((_ extract 31 31) ?x131)))
 (let ((?x298 (concat (_ bv0 31) ?x315)))
 (let ((?x132 ((_ extract 31 0) ?x131)))
 (let ((?x321 (bvadd ?x132 ?x298)))
 (let ((?x320 ((_ extract 31 31) ?x321)))
 (let ((?x322 (concat (concat (concat (concat (concat ?x320 ?x320) ?x320) ?x320) ?x320) ?x320)))
 (let ((?x295 (concat (concat (concat (concat (concat ?x322 ?x320) ?x320) ?x320) ?x320) ?x320)))
 (let ((?x262 (concat (concat (concat (concat (concat ?x295 ?x320) ?x320) ?x320) ?x320) ?x320)))
 (let ((?x310 (concat (concat (concat (concat (concat ?x262 ?x320) ?x320) ?x320) ?x320) ?x320)))
 (let ((?x289 (concat (concat (concat (concat (concat ?x310 ?x320) ?x320) ?x320) ?x320) ?x320)))
 (let ((?x280 (concat (concat (concat (concat (concat ?x289 ?x320) ?x320) ?x320) ?x320) ?x320)))
 (let ((?x318 (concat (concat ?x280 ?x320) ?x321)))
 (let ((?x277 (bvashr ?x318 (_ bv1 64))))
 (let ((?x412 ((_ extract 7 0) ?x277)))
 (let ((?x398 (bvand ?x412 (_ bv1 8))))
 (let (($x469 (and (distinct (_ bv0 8) ?x398) true)))
 (let (($x548 (and $x469 $x155 $x14 $x709)))
 (let (($x356 (= (_ bv0 8) ?x398)))
 (let ((?x452 ((_ extract 31 31) ?x277)))
 (let ((?x531 (concat (_ bv0 31) ?x452)))
 (let ((?x317 ((_ extract 31 0) ?x277)))
 (let ((?x475 (bvadd ?x317 ?x531)))
 (let ((?x443 ((_ extract 31 31) ?x475)))
 (let ((?x483 (concat (concat (concat (concat (concat ?x443 ?x443) ?x443) ?x443) ?x443) ?x443)))
 (let ((?x512 (concat (concat (concat (concat (concat ?x483 ?x443) ?x443) ?x443) ?x443) ?x443)))
 (let ((?x444 (concat (concat (concat (concat (concat ?x512 ?x443) ?x443) ?x443) ?x443) ?x443)))
 (let ((?x439 (concat (concat (concat (concat (concat ?x444 ?x443) ?x443) ?x443) ?x443) ?x443)))
 (let ((?x518 (concat (concat (concat (concat (concat ?x439 ?x443) ?x443) ?x443) ?x443) ?x443)))
 (let ((?x464 (concat (concat (concat (concat (concat ?x518 ?x443) ?x443) ?x443) ?x443) ?x443)))
 (let ((?x498 (concat (concat ?x464 ?x443) ?x475)))
 (let ((?x514 (bvashr ?x498 (_ bv1 64))))
 (let ((?x504 ((_ extract 7 0) ?x514)))
 (let ((?x456 (bvand ?x504 (_ bv1 8))))
 (let (($x541 (and (distinct (_ bv0 8) ?x456) true)))
 (let (($x553 (and $x541 $x356 $x155 $x14 $x709)))
 (let (($x590 (or $x553 $x548 $x445 $x527)))
 (let (($x720 (not $x590)))
 (let (($x455 (= (_ bv1 32) R)))
 (let (($x672 (and $x69 $x455)))
 (let (($x689 (or $x553 $x548 $x445 $x672)))
 (let (($x82 (not $x689)))
 (let (($x697 (and $x82 $x720)))
 (let (($x618 (and $x689 $x590)))
 (let (($x696 (or $x618 $x697)))
 (not $x696))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
