; benchmark generated from python API
(set-info :status unknown)
(declare-fun rdx () (_ BitVec 64))
(declare-fun R () (_ BitVec 32))
(declare-fun rdi () (_ BitVec 64))
(declare-fun rcx () (_ BitVec 64))
(declare-fun rsi () (_ BitVec 64))
(assert
 (let ((?x10 ((_ extract 31 0) rdx)))
 (let (($x129886 (= R ?x10)))
 (let ((?x6 ((_ extract 31 0) rdi)))
 (let (($x15 (= (_ bv2 32) ?x6)))
 (let (($x129910 (and $x15 $x129886)))
 (let (($x54 (= (_ bv105 32) ?x6)))
 (let (($x129865 (and $x54 $x129886)))
 (let (($x129913 (= (_ bv1 32) R)))
 (let (($x41 (and (distinct (_ bv2 32) ?x6) true)))
 (let (($x125 (and (distinct (_ bv105 32) ?x6) true)))
 (let (($x138 (= (_ bv0 64) rcx)))
 (let (($x129881 (and $x138 $x125 $x41 $x129913)))
 (let ((?x172 ((_ extract 63 63) rcx)))
 (let ((?x250 (concat (concat (concat (concat (concat ?x172 ?x172) ?x172) ?x172) ?x172) ?x172)))
 (let ((?x255 (concat (concat (concat (concat (concat ?x250 ?x172) ?x172) ?x172) ?x172) ?x172)))
 (let ((?x260 (concat (concat (concat (concat (concat ?x255 ?x172) ?x172) ?x172) ?x172) ?x172)))
 (let ((?x265 (concat (concat (concat (concat (concat ?x260 ?x172) ?x172) ?x172) ?x172) ?x172)))
 (let ((?x270 (concat (concat (concat (concat (concat ?x265 ?x172) ?x172) ?x172) ?x172) ?x172)))
 (let ((?x275 (concat (concat (concat (concat (concat ?x270 ?x172) ?x172) ?x172) ?x172) ?x172)))
 (let ((?x280 (concat (concat (concat (concat (concat ?x275 ?x172) ?x172) ?x172) ?x172) ?x172)))
 (let ((?x285 (concat (concat (concat (concat (concat ?x280 ?x172) ?x172) ?x172) ?x172) ?x172)))
 (let ((?x290 (concat (concat (concat (concat (concat ?x285 ?x172) ?x172) ?x172) ?x172) ?x172)))
 (let ((?x295 (concat (concat (concat (concat (concat ?x290 ?x172) ?x172) ?x172) ?x172) ?x172)))
 (let ((?x300 (concat (concat (concat (concat (concat ?x295 ?x172) ?x172) ?x172) ?x172) ?x172)))
 (let ((?x305 (concat (concat (concat (concat (concat ?x300 ?x172) ?x172) ?x172) ?x172) ?x172)))
 (let ((?x309 (concat (concat (concat (concat ?x305 ?x172) ?x172) ?x172) rcx)))
 (let ((?x8 ((_ extract 31 0) rsi)))
 (let ((?x168 ((_ extract 31 31) rsi)))
 (let ((?x184 (concat (concat (concat (concat (concat ?x168 ?x168) ?x168) ?x168) ?x168) ?x168)))
 (let ((?x189 (concat (concat (concat (concat (concat ?x184 ?x168) ?x168) ?x168) ?x168) ?x168)))
 (let ((?x194 (concat (concat (concat (concat (concat ?x189 ?x168) ?x168) ?x168) ?x168) ?x168)))
 (let ((?x199 (concat (concat (concat (concat (concat ?x194 ?x168) ?x168) ?x168) ?x168) ?x168)))
 (let ((?x204 (concat (concat (concat (concat (concat ?x199 ?x168) ?x168) ?x168) ?x168) ?x168)))
 (let ((?x209 (concat (concat (concat (concat (concat ?x204 ?x168) ?x168) ?x168) ?x168) ?x168)))
 (let ((?x211 (concat (concat ?x209 ?x168) ?x8)))
 (let ((?x212 (bvashr ?x211 (_ bv63 64))))
 (let ((?x217 (concat (concat (concat (concat (concat ?x212 ?x168) ?x168) ?x168) ?x168) ?x168)))
 (let ((?x222 (concat (concat (concat (concat (concat ?x217 ?x168) ?x168) ?x168) ?x168) ?x168)))
 (let ((?x227 (concat (concat (concat (concat (concat ?x222 ?x168) ?x168) ?x168) ?x168) ?x168)))
 (let ((?x232 (concat (concat (concat (concat (concat ?x227 ?x168) ?x168) ?x168) ?x168) ?x168)))
 (let ((?x237 (concat (concat (concat (concat (concat ?x232 ?x168) ?x168) ?x168) ?x168) ?x168)))
 (let ((?x242 (concat (concat (concat (concat (concat ?x237 ?x168) ?x168) ?x168) ?x168) ?x168)))
 (let ((?x245 (concat (concat (concat ?x242 ?x168) ?x168) ?x8)))
 (let ((?x310 (bvsdiv ?x245 ?x309)))
 (let ((?x311 ((_ extract 31 0) ?x310)))
 (let (($x141 (= R ?x311)))
 (let (($x140 (and (distinct (_ bv0 64) rcx) true)))
 (let (($x130045 (and $x140 $x125 $x41 $x141)))
 (let (($x129896 (or $x130045 $x129881 $x129865 $x129910)))
 (let (($x129907 (= (_ bv3131621040 32) R)))
 (let (($x46 (= (_ bv0 32) ?x10)))
 (let (($x130073 (and $x46 $x15 $x129907)))
 (let (($x49 (and (distinct (_ bv0 32) ?x10) true)))
 (let (($x130070 (and $x49 $x15 $x129886)))
 (let (($x129890 (and $x46 $x54 $x129907)))
 (let (($x129931 (and $x49 $x54 $x129886)))
 (let (($x404 (= (_ bv0 32) ?x311)))
 (let (($x129930 (and $x404 $x140 $x125 $x41 $x129907)))
 (let (($x129565 (and (distinct (_ bv0 32) ?x311) true)))
 (let (($x129859 (and $x129565 $x140 $x125 $x41 $x141)))
 (let (($x129937 (or $x129859 $x129930 $x129881 $x129931 $x129890 $x130070 $x130073)))
 (and $x129937 $x129896)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
